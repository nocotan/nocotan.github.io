---
layout: post
title:  "Atcoder Beginner Contest 073"
date:   2017-09-09 23:00:00
categories: 競技プログラミング
---

[Atcoder Beginner Contest 073](http://abc073.contest.atcoder.jp/)

### A - September 9

2桁の整数Nが入力として与えられるので，Nが9を含んでいるかどうかを求める問題．  
文字列として読み込んでN[0]とN[1]をそれぞれ調べると良い．

```c++
//#define _GRIBCXX_DEBUG
#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main() {
    string s;
    cin >> s;
    if(s[0]=='9'||s[1]=='9') cout << "Yes" << endl;
    else cout << "No" << endl;
    return 0;
}
```

## B - Theater

N組の団体が座っている席の左端と右端が与えられるので，合計で埋まっている席数を求める問題．  
N組全てに関して，ans += (r-l+1)をしていくと良い．

```c++
//#define _GRIBCXX_DEBUG
#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main() {
    int n;
    cin >> n;
    int ans = 0;
    for(int i=0; i<n; ++i) {
        int l, r;
        cin >> l >> r;
        ans += (r-l)+1;
    }
    cout << ans << endl;
    return 0;
}
```

## C - Write and Erase

N個の数字が入力として与えられ，その数字が紙に書いてあればその数字を消し，書いていなければその数字を紙に書くという操作を繰り返す．  
最終的に紙に書かれている数字の個数を答える問題．  
操作を素直に行なっていけば答えが出る．

```c++
//#define _GRIBCXX_DEBUG
#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main() {
    int n;
    cin >> n;
    vector<int> v(n);
    set<int> st;
    for(int i=0; i<n; ++i) {
        int a;
        cin >> a;
        if(st.find(a)!=st.end()) st.erase(a);
        else st.insert(a);
    }
    cout << st.size() << endl;
    return 0;
}
```

## D - joisino's travel

ノード数N，エッジ数Mのグラフが与えられるので，R個の街全てを経由する最短の経路を求める問題．  
制約から，ワーシャルフロイドで全点対最短経路をあらかじめ求めておき，Rの順列全てに対して試せば良い．

```c++
//#define _GRIBCXX_DEBUG
#include <bits/stdc++.h>
using namespace std;

#define int long long

int d[210][210];

int n, m, r;
void wf() {
    for(int k=1; k<n; ++k) {
        for(int i=0; i<n; ++i) {
            for(int j=0; j<n; ++j) {
                d[i][j] = min(d[i][j], d[i][k]+d[k][j]);
            }
        }
    }
}

signed main() {
    cin >> n >> m >> r;
    for(int i=0; i<201; ++i) {
        for(int j=0; j<201; ++j) {
            if(i==j) d[i][j] = 0;
            else d[i][j] = (1<<30);
        }
    }
    vector<int> v(r);
    for(int i=0; i<r; ++i) {
        cin >> v[i];
        v[i]--;
    }
    sort(v.begin(), v.end());

    for(int i=0; i<m; ++i) {
        int a, b, c;
        cin >> a >> b >> c;
        a--;
        b--;
        d[a][b] = c;
        d[b][a] = c;
    }
    wf();

    int ans = (1<<30);
    do {
        int tmp = 0;
        for(int i=1; i<v.size(); ++i) tmp += d[v[i-1]][v[i]];
        ans = min(ans, tmp);
    } while(next_permutation(v.begin(), v.end()));
    cout << ans << endl;
    return 0;
}
```
