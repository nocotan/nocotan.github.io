---
layout: post
title:  "最長共通部分列問題"
date:   2017-01-23 12:00:00
categories: アルゴリズム
---

## 最長共通部分列問題(LCS: Longest Common Subsequence)

> ２つの文字列s<sub>1</sub>s<sub>2</sub>...s<sub>n</sub>と
> t<sub>1</sub>t<sub>2</sub>...t<sub>m</sub>が与えられる。
> これら２つの共通部分列の長さを求めよ。


**dp[i][j] := s<sub>1</sub>...s<sub>i</sub>とt<sub>1</sub>...t<sub>j</sub>に対するLCSの長さ**

とすると、共通部分は、

1. s<sub>1</sub>...s<sub>i</sub>とt<sub>1</sub>...t<sub>j</sub>に対する共通部分列の後ろにs<sub>i+1</sub>をつなげたもの
2. s<sub>1</sub>...s<sub>i</sub>とt<sub>1</sub>...t<sub>j+1</sub>に対する共通部分列
3. s<sub>1</sub>...s<sub>i+1</sub>とt<sub>1</sub>...t<sub>j</sub>に対する共通部分列

のどれかとなる。以下、C++のコード。

```c++
#include <iostream>
#include <string>
using namespace std;

#define MAX_N 1000
#define MAX_M 1000

int n, m;
string s, t;

int dp[MAX_N+1][MAX_M+1];

void solve() {
    for (int i=0; i<n; ++i) {
        for (int j=0; j<m; ++j) {
            if (s[i] == t[j]) {
                dp[i+1][j+1] = dp[i][j] + 1;
            }
            else {
                dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);
            }
        }
    }
}

int main() {
    cin >> n >> m;
    cin >> s >> t;
    solve();
    cout << dp[n][m] << endl;
}
```

計算量はO(nm)
